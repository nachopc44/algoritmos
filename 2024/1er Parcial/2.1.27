//Elaborar un procedimiento que dada una secuencia de caracteres como entrada genere otra del mismo tipo como salida.
//La secuencia de caracteres que se recibe incluye números de tarjetas de crédito, donde cada número tiene 16 dígitos. Se desea obtener como resultado una nueva secuencia de salida con los números de tarjetas válidos.
//El algoritmo para la validación de números de tarjetas de crédito es el siguiente: Para entender mejor el método usaremos un número correcto: 4013-7001-0977-4812, al que nos referiremos en el texto. Nos centramos en los caracteres que ocupan posiciones impares.
//4 0 1 3 7 0 0 1 0 9 7 7 4 8 1 2
//Por cada uno de ellos obtenemos el doble del valor que representan. Si el número resultante es menor que 9, se deja tal cual, en caso contrario, se le resta 9. En nuestro ejemplo: 4 * 2 = 8; 1 * 2 = 2; 7 * 2 = 14, mayor que nueve, se le resta 9. 14 - 9 = 5; y así sucesivamente. Si el número resultante de la suma de las multiplicaciones y de los dígitos en posición par, es múltiplo de 10, y a la vez menor o igual a 150, es un número de tarjeta válido.
//Para nuestro ejemplo: 8+0+2+3+5+0+0+1+0+9+5+7+8+8+2+2 = 60; por lo tanto el número es válido.

Accion 2127 es 

AMBIENTE
Sec1: secuencia de caracteres
V1: caracter 
SecS: secuencia de caracteres
NumTarj: entero

Funcion Pasar_Entero(dig: caracter):entero es
	Segun dig hacer
		="0": Pasar_Entero:=0
		="1": Pasar_Entero:=1
		="2": Pasar_Entero:=2
		="3": Pasar_Entero:=3
		="4": Pasar_Entero:=4
		="5": Pasar_Entero:=5
		="6": Pasar_Entero:=6
		="7": Pasar_Entero:=7
		="8": Pasar_Entero:=8
		="9": Pasar_Entero:=9
	FinSegun 
FinFuncion

Procedimiento Verif_Tarj es
	Mientras NFDS(Sec1) hacer
		Escribir(SecS,V1)

FinProcedimiento

PROCESO
	arr(Sec1)
	avz(Sec1,V1)
	crear(SecS)
	Verif_Tarj
FinAccion